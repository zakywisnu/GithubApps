<resources>
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>
    <style name="Widget.App.TextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.TextInputLayout</item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>

    </style>
    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <style name="ThemeOverlay.App.TextInputLayout" parent="">
        <item name="colorPrimary">@color/colorPrimaryDark</item>
        <item name="colorOnSurface">@color/colorAccent</item>
        <item name="colorError">@android:color/white</item>

        <item name="textAppearanceSubtitle1">@style/TextAppearance.App.Subtitle1</item>
        <item name="textAppearanceCaption">@style/TextAppearance.App.Caption</item>

        <!--Note: When setting a materialThemeOverlay on a custom TextInputLayout style, don’t forget to set editTextStyle to either a @style/Widget.MaterialComponents.TextInputEditText.* style or to a custom one that inherits from that.
        The TextInputLayout styles set materialThemeOverlay that overrides editTextStyle with the specific TextInputEditText style needed. Therefore, you don’t need to specify a style tag on the edit text.-->
        <item name="editTextStyle">@style/Widget.MaterialComponents.TextInputEditText.OutlinedBox</item>
    </style>

    <style name="TextAppearance.App.Subtitle1" parent="TextAppearance.MaterialComponents.Subtitle1">
    </style>

    <style name="TextAppearance.App.Caption" parent="TextAppearance.MaterialComponents.Caption">
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">cut</item>
        <item name="cornerSize">4dp</item>
    </style>
<!--    <style name="Widget.App.TextInputLayout" parent="Theme.MaterialComponents.Light">-->
<!--        <item name="hintTextAppearance">@style/TextAppearance.Shrine.TextInputLayout.HintText</item>-->
<!--        <item name="android:textColorHint">@android:color/black</item>-->
<!--        <item name="boxStrokeWidth">3dp</item>-->
<!--        <item name="android:outlineProvider">@android:color/black</item>-->
<!--        <item name="boxCornerRadiusBottomEnd">5dp</item>-->
<!--        <item name="boxCornerRadiusBottomStart">5dp</item>-->
<!--        <item name="boxCornerRadiusTopEnd">5dp</item>-->
<!--        <item name="boxCornerRadiusTopStart">5dp</item>-->
<!--        <item name="android:layout_margin">5dp</item>-->
<!--    </style>-->

</resources>